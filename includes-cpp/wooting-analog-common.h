/* This is a generated header file providing the common items to everything related to the Analog SDK */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdarg>
#include <cstdint>
#include <cstdlib>
#include <new>

enum class WootingAnalog_DeviceEventType {
  WootingAnalog_DeviceEventType_Connected = 1,
  WootingAnalog_DeviceEventType_Disconnected,
};

enum class WootingAnalog_KeycodeType {
  WootingAnalog_KeycodeType_HID,
  WootingAnalog_KeycodeType_ScanCode1,
  WootingAnalog_KeycodeType_VirtualKey,
  WootingAnalog_KeycodeType_VirtualKeyTranslate,
};

enum class WootingAnalogResult {
  WootingAnalogResult_Ok = 1,
  WootingAnalogResult_UnInitialized = -2000,
  WootingAnalogResult_NoDevices,
  WootingAnalogResult_DeviceDisconnected,
  WootingAnalogResult_Failure,
  WootingAnalogResult_InvalidArgument,
  WootingAnalogResult_NoPlugins,
  WootingAnalogResult_FunctionNotFound,
  WootingAnalogResult_NoMapping,
  /// Indicates that it isn't available on this platform
  WootingAnalogResult_NotAvailable,
};

using WootingAnalog_DeviceID = uint64_t;

/// The core `DeviceInfo` struct which contains all the interesting information
/// for a particular device
struct WootingAnalog_DeviceInfo {
  /// Device Vendor ID `vid`
  uint16_t vendor_id;
  /// Device Product ID `pid`
  uint16_t product_id;
  /// Device Manufacturer name
  const char *manufacturer_name;
  /// Device name
  const char *device_name;
  /// Unique device ID, which should be generated using `generate_device_id`
  WootingAnalog_DeviceID device_id;
};

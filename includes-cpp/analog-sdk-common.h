/* This is a generated header file providing the common items to everything related to the Analog SDK */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdarg>
#include <cstdint>
#include <cstdlib>
#include <new>

enum class AnalogSDKResult {
  AnalogSDKResult_Ok = 1,
  AnalogSDKResult_UnInitialized = -2000,
  AnalogSDKResult_NoDevices,
  AnalogSDKResult_DeviceDisconnected,
  AnalogSDKResult_Failure,
  AnalogSDKResult_InvalidArgument,
  AnalogSDKResult_NoPlugins,
  AnalogSDKResult_FunctionNotFound,
  AnalogSDKResult_NoMapping,
};

enum class ASDK_DeviceEventType {
  ASDK_DeviceEventType_Connected = 1,
  ASDK_DeviceEventType_Disconnected,
};

enum class ASDK_KeycodeType {
  ASDK_KeycodeType_HID,
  ASDK_KeycodeType_ScanCode1,
  ASDK_KeycodeType_VirtualKey,
  ASDK_KeycodeType_VirtualKeyTranslate,
};

using ASDK_DeviceID = uint64_t;

/// The core `DeviceInfo` struct which contains all the interesting information
/// for a particular device
struct ASDK_DeviceInfo {
  /// Device Vendor ID `vid`
  uint16_t vendor_id;
  /// Device Product ID `pid`
  uint16_t product_id;
  /// Device Manufacturer name
  const char *manufacturer_name;
  /// Device name
  const char *device_name;
  /// Unique device ID, which should be generated using `generate_device_id`
  ASDK_DeviceID device_id;
};

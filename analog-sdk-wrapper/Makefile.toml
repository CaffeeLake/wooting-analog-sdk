[env]
HEADER_NAME="analog-sdk-wrapper.h"
HEADER_OUTPUT_DIR_C="${CARGO_MAKE_WORKING_DIRECTORY}/../includes"
HEADER_OUTPUT_DIR_CPP="${CARGO_MAKE_WORKING_DIRECTORY}/../includes-cpp"

[tasks.header-cpp]
toolchain = "nightly"
command = "cbindgen"
args = ["-l", "c++", "--clean", "-o", "${HEADER_OUTPUT_DIR_CPP}/${HEADER_NAME}"]
#Include clean on the second header gen as otherwise it'll strangely fail on windows and mac

[tasks.header-c]
toolchain = "nightly"
command = "cbindgen"
args = ["-l", "c", "-o", "${HEADER_OUTPUT_DIR_C}/${HEADER_NAME}"]

[tasks.cbindgen-install]
install_crate = { crate_name = "cbindgen", rustup_component_name="cbindgen", binary="cbindgen", test_arg = "--help" }
command = "cbindgen"
args = ["--version"]

[tasks.cbindgen]
#TODO: Check the rustup_component_name arg to see if it is the correct name
dependencies=["cbindgen-install", "header-c", "header-cpp"]

[tasks.clean-headers]
#env = { HEADER_POSTFIX="*" }
script_runner = "@shell"
script = [
'''
rm ${HEADER_OUTPUT_DIR_CPP}/${HEADER_NAME}
rm ${HEADER_OUTPUT_DIR_C}/${HEADER_NAME}
'''
]


[tasks.post-build]
dependencies=["cbindgen"]

[tasks.clean]
dependencies=["clean-headers"]
[env]
HEADER_OUTPUT_DIR_C="${CARGO_MAKE_WORKING_DIRECTORY}/../includes"
HEADER_OUTPUT_DIR_CPP="${CARGO_MAKE_WORKING_DIRECTORY}/../includes-cpp"

HEADER_NAME="analog-sdk-common.h"
HEADER_PLUGIN_NAME="analog-sdk-common-plugin.h"

HEADER_PATH_CLEAN="${HEADER_OUTPUT_DIR_C}/analog-sdk-common*"
HEADER_PATH_CLEAN_CPP="${HEADER_OUTPUT_DIR_CPP}/analog-sdk-common*"

PLUGIN_GEN_PATH="${CARGO_MAKE_WORKING_DIRECTORY}/cbindgen-plugin.toml"

[tasks.plugin-header-cpp]
toolchain = "nightly"
command = "cbindgen"
args = ["-l", "c++", "-o", "${HEADER_OUTPUT_DIR_CPP}/${HEADER_PLUGIN_NAME}", "-c", "${PLUGIN_GEN_PATH}"]

[tasks.plugin-header-c]
toolchain = "nightly"
command = "cbindgen"
args = ["-l", "c", "-o", "${HEADER_OUTPUT_DIR_C}/${HEADER_PLUGIN_NAME}", "-c", "${PLUGIN_GEN_PATH}"]

[tasks.header-cpp]
toolchain = "nightly"
command = "cbindgen"
args = ["-l", "c++", "-o", "${HEADER_OUTPUT_DIR_CPP}/${HEADER_NAME}"]

[tasks.header-c]
toolchain = "nightly"
command = "cbindgen"
args = ["-l", "c", "-o", "${HEADER_OUTPUT_DIR_C}/${HEADER_NAME}"]

[tasks.cbindgen-install]
install_crate = { crate_name = "cbindgen", rustup_component_name="cbindgen", binary="cbindgen", test_arg = "--help" }
command = "cbindgen"
args = ["--version"]

[tasks.cbindgen]
#TODO: Check the rustup_component_name arg to see if it is the correct name
dependencies=["cbindgen-install", "header-cpp", "header-c", "plugin-header-c", "plugin-header-cpp"]

[tasks.clean-headers]
#env = { HEADER_POSTFIX="*" }
script_runner = "@shell"
script = [
'''
rm ${HEADER_PATH_CLEAN}
rm ${HEADER_PATH_CLEAN_CPP}
'''
]


[tasks.post-build]
dependencies=["cbindgen"]

[tasks.clean]
dependencies=["clean-headers"]